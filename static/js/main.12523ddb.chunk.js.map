{"version":3,"sources":["components/playlist/PlaylistAudioItem.tsx","components/playlist/PlaylistFolderItem.tsx","components/playlist/PlaylistContainer.tsx","types/playlist/FileSet.tsx","types/playlist/File.tsx","types/playlist/Audio.tsx","types/AudioPlaying.tsx","types/playlist/User.ts","types/clients/DropboxClient.tsx","types/clients/OneDriveClient.tsx","components/auth/ Authentication.tsx","helpers/secsToMins.js","components/player/PlayerContainer.tsx","components/topBar/TopBar.tsx","components/Container.tsx","App.tsx","serviceWorker.ts","store/AuthStore.tsx","store/CommonStore.tsx","store/FilesStore.tsx","store/Store.tsx","index.tsx"],"names":["PlaylistAudioItem","inject","observer","_this$props","this","props","key","store","audio","playFile","react_default","a","createElement","PlaylistAudioItem_PlaylistAudioItemPure","isNow","FilesStore","playNow","fullPath","React","Component","PlaylistAudioItemPure","_this$props2","className","concat","onClick","style","marginRight","title","author","PureComponent","Panel","Collapse","PlaylistFolderItem","folder","content","row","type","justify","align","col","span","collapse","header","icon","pseudoUid","PlaylistContainer","state","playlist","fetchFiles","fs","_this2","files","length","map","el","makeItem","f","playlist_PlaylistAudioItem","makeList","filter","playlist_PlaylistFolderItem","list","itemLayout","renderItem","Item","skeleton","active","paragraph","rows","width","dataSource","FileSet","Object","classCallCheck","File","itemId","Audio","Audio_class","album","duration","initializerDefineProperty","_descriptor","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","AudioPlaying","URL","User","userName","DropboxClient","client","_this","cloudSource","mapOfFiles","mode","checkspace","normalize","dropBox","fileSet","path_lower","split","e","sort","b","forEach","pathArr","nodeNow","pathName","newFolder","existingFolder","find","push","name","lastIndexOf","filePath","join","dropBoxFile","newAudio","index","getAllFiles","asyncToGenerator","regenerator_default","mark","_callee","normalized","wrap","_context","prev","next","filesListFolder","recursive","path","sent","Error","entries","abrupt","stop","_ref2","_callee2","pseudoMeta","file","metadata","_context2","filesGetTemporaryLink","link","_x","apply","arguments","getNext","_ref3","_callee3","nextIndex","_context3","findIndex","_x2","getPrev","_ref4","_callee4","_context4","_x3","authorize","getMe","_callee5","dbUser","_context5","usersGetCurrentAccount","display_name","getAllFilesAlbums","_callee6","_context6","OneDriveClient","filesetFiles","_ref","oneDriveItem","children","i","element","disc","_file","api","parentReference","expand","get","t0","t1","t2","artist","id","normalizeAlbums","rootFolder","onlyFiles","R","authorFolder","songsByThisAuthor","albums","audioFile","odUser","displayName","givenName","surname","Authentication","OAuthUrl","authorizedByDropbox","urlParams","localStorage","setItem","access_token","setClient","Dropbox","accessToken","authorizedByOneDrive","AuthStore","getItem","id_token","handleOnedriveAuth","Msal","loginRedirect","clientId","url","getAuthenticationUrl","document","location","href","setState","oldToken","setLoading","setAccessToken","then","result","setIsAuthed","history","catch","err","MicrosoftGraph","init","authProvider","done","userAgentApplication","acquireTokenSilent","console","error","hash","queryString","parse","card","loading","es_button","withRouter","secsToMins","secs","fullSecs","Math","trunc","deciSecs","floor","PlayerContainer","progress","played","playedSeconds","loaded","loadedSeconds","repeat","value","shuffle","volume","playback","player","handleChangeVolume","Number","handleChangeMode","isMobile","defineProperty","marginBottom","ReactPlayer_default","ref","position","zIndex","onDuration","dur","onProgress","height","loop","fileConfig","forceAudio","playing","isPlay","onEnded","theme","switchPlay","slider","max","tipFormatter","val","onChange","seekTo","react","TopBar","handleLogOut","removeItem","window","handleChangeDest","checked","fetchFilesAlbum","setUser","es_switch","unCheckedChildren","checkedChildren","user","tooltip","Container","OAuthPassed","Switch","Route","_Authentication","components_topBar_TopBar","player_PlayerContainer","marginTop","playlist_PlaylistContainer","spin","App","BrowserRouter","components_Container","Boolean","hostname","match","store_AuthStore","AuthStore_dec","action","bound","_dec2","_dec3","_dec4","AuthStore_class","AuthStore_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_this3","_this4","store_CommonStore","store_FilesStore","FilesStore_dec","FilesStore_dec2","FilesStore_dec3","FilesStore_dec4","_dec5","_dec6","_dec7","_dec8","_dec9","_dec10","_dec11","_dec12","FilesStore_class","playingAlbum","FilesStore_descriptor","FilesStore_descriptor2","FilesStore_descriptor3","FilesStore_descriptor4","FilesStore_descriptor5","FilesStore_descriptor6","FilesStore_descriptor7","FilesStore_descriptor8","FilesStore_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","getPlayingAlbum","newFileSet","sourceCloud","_this5","_this6","_this7","_this8","_this9","_this10","_this11","currentIndex","indexInAlbum","_album","_indexInAlbum","random","_this12","_this13","store_Store","Store","CommonStore","ReactDOM","render","index_module","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12523ddb.chunk.js","sourcesContent":["import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport { Store } from \"../../store/Store\";\nimport { Audio } from \"../../types/playlist/Audio\";\nimport { render } from \"react-dom\";\n\ninterface IPlaylistAudioItem {\n  key: number;\n  audio: Audio;\n  store?: Store;\n  playFile: (path: string) => void;\n}\n\ninterface IPlaylistAudioPure {\n  key: number;\n  audio: Audio;\n  isNow: boolean;\n  playFile: (path: string) => void;\n}\n\n@inject(\"store\")\n@observer\nclass PlaylistAudioItem extends React.Component<IPlaylistAudioItem> {\n  public render() {\n    const { key, store, audio, playFile } = this.props;\n    return (\n      <PlaylistAudioItemPure\n        key={key}\n        audio={audio}\n        playFile={playFile}\n        isNow={\n          store!.FilesStore.playNow &&\n          store!.FilesStore.playNow.fullPath === audio.fullPath\n        }\n      />\n    );\n  }\n}\n\nclass PlaylistAudioItemPure extends React.PureComponent<IPlaylistAudioPure> {\n  public render() {\n    const { key, isNow, audio, playFile } = this.props;\n    return (\n      <div\n        className={`audio-item ${isNow && \"now\"}`}\n        key={key}\n        onClick={() => playFile(audio.fullPath)}\n      >\n        <div className=\"audio-item__art\" style={{ marginRight: \"12px\" }} />\n        <div className=\"audio-item__info\">\n          <p className=\"audio-item__title\">{audio.title}</p>\n          <p className=\"audio-item__bandName\">{audio.author}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PlaylistAudioItem;\n","import React, { ReactNode } from \"react\";\nimport { Row, Col, Collapse, Icon } from \"antd\";\nimport { File } from \"../../types/playlist/File\";\n\nconst { Panel } = Collapse;\n\ninterface IPlaylistFolderItem {\n  folder: File;\n  key: number;\n  content: ReactNode;\n}\nclass PlaylistFolderItem extends React.PureComponent<IPlaylistFolderItem> {\n  public render() {\n    const { folder, content } = this.props;\n    return (\n      <Row type=\"flex\" justify=\"center\" align=\"middle\" className=\"folder-item\">\n        <Col span={24}>\n          <Collapse>\n            <Panel\n              header={\n                <div className=\"folder-item__header\">\n                  <Icon className=\"folder-item__icon\" type=\"folder\" />\n                  <div className=\"folder-item__title\">{folder.title}</div>\n                </div>\n              }\n              key=\"1\"\n            >\n              {content}\n            </Panel>\n          </Collapse>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default PlaylistFolderItem;\n","import React from \"react\";\nimport { List, Icon, Row, Col, Spin, Skeleton, Collapse } from \"antd\";\nimport \"./Playlist.scss\";\nimport { Dropbox } from \"dropbox\";\nimport { File } from \"../../types/playlist/File\";\nimport { IPlaylistItem } from \"../../types/playlist/IPlaylistItem\";\nimport { IDropboxFile } from \"../../types/playlist/IDropboxFile\";\nimport { observer, inject } from \"mobx-react\";\nimport { FileSet } from \"../../types/playlist/FileSet\";\nimport { Audio } from \"../../types/playlist/Audio\";\nimport { Z_BLOCK } from \"zlib\";\nimport { AudioPlaying } from \"../../types/AudioPlaying\";\nimport PlaylistAudioItem from \"./PlaylistAudioItem\";\nimport PlaylistFolderItem from \"./PlaylistFolderItem\";\n\ninterface IPlayListContainer {\n  files: FileSet;\n  fetchFiles: () => void;\n  playFile: (path: string) => void;\n  playNow?: AudioPlaying;\n}\n\nlet pseudoUid = 0;\n\nconst key = () => {\n  return pseudoUid++;\n};\nconst Panel = Collapse.Panel;\n\n@inject(\"store\")\n@observer\nclass PlaylistContainer extends React.Component<IPlayListContainer> {\n  state = {\n    playlist: []\n  };\n\n  componentDidMount() {\n    this.props.fetchFiles();\n  }\n\n  makeList(fs: FileSet) {\n    if (fs.files && fs.files.length > 0)\n      return fs.files.map(el => this.makeItem(el));\n  }\n\n  makeItem(f: File) {\n    if (f.type === \"File\") {\n      const audio = f.content as Audio;\n      return (\n        <PlaylistAudioItem\n          audio={audio}\n          key={key()}\n          playFile={this.props.playFile}\n        />\n      );\n    } else {\n      const folder = f.content as FileSet;\n      const content = this.makeList(folder);\n      if (content && content!.filter(el => el).length > 0)\n        return <PlaylistFolderItem key={key()} content={content} folder={f} />;\n    }\n  }\n\n  public render() {\n    return this.props.files ? (\n      <div className=\"playlist\">{this.makeList(this.props.files)}</div>\n    ) : (\n      <List\n        itemLayout=\"horizontal\"\n        renderItem={(el: number) => (\n          <List.Item className=\"audio-item\">\n            <Skeleton active paragraph={{ rows: 0, width: 100 }} />\n          </List.Item>\n        )}\n        dataSource={[1, 2, 3, 4, 5]}\n      />\n    );\n  }\n}\n\nexport default observer(PlaylistContainer);\n","import { File } from \"./File\";\n\nexport class FileSet {\n  public files: File[] = [];\n\n  constructor() {}\n}\n","import { Audio } from \"./Audio\";\nimport { FileSet } from \"./FileSet\";\n\nexport class File {\n  public title: string;\n  public type: \"Folder\" | \"File\";\n  public content: Audio | FileSet;\n  public itemId?: string;\n  constructor(\n    title: string,\n    type: \"Folder\" | \"File\",\n    content: Audio | FileSet,\n    itemId?: string\n  ) {\n    this.title = title;\n    this.type = type;\n    this.content = content;\n    this.itemId = itemId;\n  }\n}\n","import { observable } from \"mobx\";\n\nexport class Audio {\n  public title: string;\n  public album: string;\n  public author: string;\n  public fullPath: string;\n  @observable public duration: number;\n  constructor(\n    title: string,\n    album: string,\n    author: string,\n    duration: number,\n    fullPath: string\n  ) {\n    this.title = title;\n    this.album = album;\n    this.author = author;\n    this.duration = duration;\n    this.fullPath = fullPath;\n  }\n}\n","import { Audio } from \"./playlist/Audio\";\n\nexport class AudioPlaying {\n  public audio: Audio;\n  public fullPath: string;\n  public URL: string;\n  constructor(audio: Audio, fullPath: string, URL: string) {\n    this.audio = audio;\n    this.fullPath = fullPath;\n    this.URL = URL;\n  }\n}\n","export class User {\n  public userName: string;\n\n  constructor(userName: string) {\n    this.userName = userName;\n  }\n}\n","import { ICloudClient } from \"./ICloudClient\";\nimport { Dropbox } from \"dropbox\";\nimport { IDropboxFile } from \"../playlist/IDropboxFile\";\nimport { FileSet } from \"../playlist/FileSet\";\nimport { File } from \"../playlist/File\";\nimport { Audio } from \"../playlist/Audio\";\nimport { AudioPlaying } from \"../AudioPlaying\";\nimport { duration } from \"moment\";\nimport { async } from \"q\";\nimport { User } from \"../playlist/User\";\n\nexport class DropboxClient implements ICloudClient {\n  client: Dropbox;\n  public readonly cloudSource = \"DropBox\";\n  public mapOfFiles: File[] = [];\n  mode: \"repeat\" | \"shuffle\" | \"\";\n  checkspace: \"album\" | \"song\" | \"\";\n\n  constructor(client: Dropbox) {\n    this.client = client;\n    this.mode = \"\";\n    this.checkspace = \"album\";\n  }\n\n  normalize = (dropBox: IDropboxFile[]): FileSet => {\n    const fileSet: FileSet = new FileSet();\n\n    const folders = dropBox.filter(el => el[\".tag\"] === \"folder\");\n\n    // Создаем папки\n    const folderNames: string[][] = folders\n      .map(el => el.path_lower.split(\"/\").filter(e => e))\n      .sort((a, b) =>\n        a.length > b.length ? 1 : a.length === b.length ? 0 : -1\n      );\n\n    folderNames.forEach((pathArr: string[]) => {\n      let nodeNow = fileSet;\n\n      pathArr.forEach((pathName: string) => {\n        const newFolder = new FileSet();\n\n        if (nodeNow.files) {\n          const existingFolder = nodeNow.files.find(\n            el => el.title === pathName\n          );\n          if (existingFolder) {\n            nodeNow = existingFolder.content as FileSet;\n          } else {\n            nodeNow.files.push(new File(pathName, \"Folder\", newFolder));\n            nodeNow = newFolder;\n          }\n        } else {\n          nodeNow.files = [new File(pathName, \"Folder\", newFolder)];\n          nodeNow = newFolder;\n        }\n      });\n    });\n    // Заполняем файлы\n    const audios = dropBox.filter(\n      el =>\n        el[\".tag\"] === \"file\" &&\n        el.name.lastIndexOf(\".mp3\") === el.name.length - 4\n    );\n    const audiosNames: string[][] = audios\n      .map(el => el.path_lower.split(\"/\").filter(e => e))\n      .sort((a, b) =>\n        a.length > b.length ? 1 : a.length === b.length ? 0 : -1\n      );\n\n    audiosNames.forEach((pathArr: string[]) => {\n      let nodeNow = fileSet;\n      const filePath = \"/\" + pathArr.join(\"/\");\n      const dropBoxFile = dropBox.find(\n        el => el.path_lower === filePath\n      ) as IDropboxFile;\n      const newAudio = new File(\n        dropBoxFile.name,\n        \"File\",\n        new Audio(\n          dropBoxFile.name,\n          pathArr[pathArr.length - 2],\n          pathArr[pathArr.length - 2],\n          300,\n          filePath\n        )\n      );\n      this.mapOfFiles.push(newAudio);\n      pathArr.forEach((pathName: string, index: number) => {\n        if (pathArr.length === 1 || pathArr.length - 1 === index) {\n          if (!nodeNow.files) nodeNow.files = [newAudio];\n          else nodeNow.files.push(newAudio);\n        } else {\n          nodeNow = (nodeNow.files.find(el => el.title === pathName) as File)\n            .content as FileSet;\n        }\n      });\n    });\n\n    return fileSet;\n  };\n\n  getAllFiles = async () => {\n    const files = await this.client.filesListFolder({\n      recursive: true,\n      path: \"\"\n    });\n    if (!files) throw new Error(\"Не удалось получить список файлов!\");\n    const normalized: FileSet = this.normalize(files.entries as IDropboxFile[]);\n    return normalized;\n  };\n\n  playFile = async (path: string) => {\n    const pathArr = path.split(\"/\");\n    const pseudoMeta = pathArr[pathArr.length - 2];\n\n    const file = await this.client.filesGetTemporaryLink({ path });\n    const { metadata } = file;\n    const audio = new Audio(\n      metadata.name,\n      pseudoMeta,\n      pseudoMeta,\n      0,\n      file.metadata.path_lower || \"\"\n    );\n    return new AudioPlaying(audio, metadata.path_lower || \"\", file.link);\n  };\n\n  getNext = async (path: string) => {\n    let nextIndex = this.mapOfFiles.findIndex(\n      el => (el.content as Audio).fullPath === path\n    );\n    nextIndex = nextIndex === this.mapOfFiles.length - 1 ? 0 : nextIndex + 1;\n    return this.playFile(\n      (this.mapOfFiles[nextIndex].content as Audio).fullPath\n    );\n  };\n\n  getPrev = async (path: string) => {\n    let nextIndex = this.mapOfFiles.findIndex(\n      el => (el.content as Audio).fullPath === path\n    );\n    nextIndex = nextIndex === 0 ? 0 : nextIndex - 1;\n    return this.playFile(\n      (this.mapOfFiles[nextIndex].content as Audio).fullPath\n    );\n  };\n\n  authorize = () => {};\n\n  getMe = async () => {\n    const dbUser = await this.client.usersGetCurrentAccount();\n    return new User(dbUser.name.display_name);\n  };\n\n  getAllFilesAlbums = async () => {\n    return await this.getAllFiles();\n  };\n}\n","import { ICloudClient } from \"./ICloudClient\";\nimport { FileSet } from \"../playlist/FileSet\";\nimport { File } from \"../playlist/File\";\nimport { Audio } from \"../playlist/Audio\";\nimport { AudioPlaying } from \"../AudioPlaying\";\nimport { Client } from \"@microsoft/microsoft-graph-client\";\nimport * as MicrosoftGraph from \"@microsoft/microsoft-graph-types\";\nimport { User } from \"../playlist/User\";\nimport * as R from \"ramda\";\nimport { element } from \"prop-types\";\n\nexport class OneDriveClient implements ICloudClient {\n  client: Client;\n  public readonly cloudSource = \"OneDrive\";\n  mapOfFiles: File[] = [];\n  mode: \"repeat\" | \"shuffle\" | \"\";\n  checkspace: \"album\" | \"song\" | \"\";\n  filesetFiles?: FileSet;\n\n  constructor(client: Client) {\n    this.client = client;\n    this.mode = \"\";\n    this.checkspace = \"album\";\n  }\n\n  normalize = async (\n    oneDriveItem: MicrosoftGraph.DriveItem\n  ): Promise<FileSet> => {\n    const fileSet = new FileSet();\n    fileSet.files = [];\n    if (oneDriveItem.children) {\n      const children = oneDriveItem.children\n        .filter(el => el.folder || el.audio)\n        .sort((a, b) =>\n          a.folder && b.audio ? 0 : a.folder && b.folder ? 0 : 1\n        );\n      for (let i = 0; i < children.length; i++) {\n        const element = children[i];\n        if (element.folder) {\n          const disc = await this.client\n            .api(`/me${element.parentReference!.path}/${element.name}`)\n            .expand(\"children\")\n            .get();\n          const file = new File(\n            element.name!,\n            \"Folder\",\n            await this.normalize(disc)\n          );\n          fileSet.files.push(file);\n        } else if (element.audio) {\n          const file = new File(\n            element.name!,\n            \"File\",\n            new Audio(\n              element.audio.title || element.name!,\n              element.audio.album || oneDriveItem.name!,\n              element.audio.artist || oneDriveItem.name!,\n              element.audio.duration! / 1000,\n              (element as any)[\"@microsoft.graph.downloadUrl\"]\n            ),\n            element.id\n          );\n          this.mapOfFiles.push(file);\n          fileSet.files.push(file);\n        }\n      }\n    }\n\n    return fileSet;\n  };\n\n  normalizeAlbums = async (): Promise<FileSet> => {\n    const rootFolder = new FileSet();\n    const onlyFiles = this.mapOfFiles.filter(el => el.type === \"File\");\n    rootFolder.files = R.map(\n      el => new File((el.content as Audio).author, \"Folder\", new FileSet()),\n      R.uniqBy(el => (el.content as Audio).author, onlyFiles)\n    );\n\n    rootFolder.files.forEach(authorFolder => {\n      const songsByThisAuthor = onlyFiles.filter(\n        el => (el.content as Audio).author === authorFolder.title\n      );\n      const albums = ((authorFolder.content as FileSet).files = R.map(\n        el => new File((el.content as Audio).album, \"Folder\", new FileSet()),\n        R.uniqBy(el => (el.content as Audio).album, songsByThisAuthor)\n      ));\n\n      albums.forEach(album => {\n        (album.content as FileSet).files = songsByThisAuthor.filter(\n          el => (el.content as Audio).album === album.title\n        );\n      });\n\n      (authorFolder.content as FileSet).files = albums;\n    });\n\n    return rootFolder;\n  };\n\n  getAllFiles = async () => {\n    const folder: MicrosoftGraph.DriveItem = await this.client\n      .api(\"/me/drive/root:/music\")\n      .expand(\"children\")\n      .get();\n\n    this.mapOfFiles = [];\n    const fileSet = await this.normalize(folder);\n    this.filesetFiles = fileSet;\n    return await fileSet;\n  };\n\n  playFile = async (path: string) => {\n    const audioFile = this.mapOfFiles.find(\n      el => (el.content as Audio).fullPath === path\n    ) as File;\n    return new AudioPlaying(audioFile.content as Audio, path, path);\n  };\n\n  authorize = () => {};\n\n  getMe = async () => {\n    const odUser: MicrosoftGraph.User = await this.client.api(\"/me\").get();\n    return new User(\n      odUser.displayName || (odUser.givenName + \" \" + odUser.surname)!\n    );\n  };\n\n  getAllFilesAlbums = async () => {\n    const fileSet = await this.normalizeAlbums();\n    this.filesetFiles = fileSet;\n    return await fileSet;\n  };\n}\n","import React from \"react\";\nimport queryString from \"query-string\";\nimport { Dropbox } from \"dropbox\";\nimport { withRouter, RouteComponentProps } from \"react-router\";\nimport { Card, Button, Icon } from \"antd\";\nimport * as Msal from \"msal\";\nimport * as MicrosoftGraph from \"@microsoft/microsoft-graph-client\";\nimport \"./Authentication.scss\";\nimport { inject, IStoresToProps, observer } from \"mobx-react\";\nimport { Store } from \"../../store/Store\";\nimport { FilesStore } from \"../../store/FilesStore\";\nimport { DropboxClient } from \"../../types/clients/DropboxClient\";\nimport { AuthProviderCallback } from \"@microsoft/microsoft-graph-client\";\nimport { OneDriveClient } from \"../../types/clients/OneDriveClient\";\nimport { AuthStore } from \"../../store/AuthStore\";\n\ninterface IAuthentication extends RouteComponentProps {\n  store?: Store;\n}\n\n@inject(\"store\")\n@observer\nclass Authentication extends React.Component<IAuthentication> {\n  state = { OAuthUrl: \"\" };\n\n  componentDidMount() {\n    // Получаем URL по которому будет авторизовавыться в случае Dropbox\n    const { AuthStore, FilesStore } = this.props.store!;\n    const dropBox = new Dropbox({ clientId: \"7174q8sh3aiss51\" });\n    const url = dropBox.getAuthenticationUrl(document.location.href);\n    if (url) {\n      this.setState({ OAuthUrl: url });\n    }\n\n    const oldToken = localStorage.getItem(\"access_token\");\n    const cloudSource = localStorage.getItem(\"cloudSource\");\n    if (oldToken && cloudSource === \"Dropbox\") {\n      AuthStore.setLoading(true);\n      dropBox.setAccessToken(oldToken);\n\n      dropBox\n        .usersGetCurrentAccount()\n        .then(result => {\n          AuthStore.setLoading(false);\n          AuthStore.setIsAuthed();\n          FilesStore.setClient(new DropboxClient(dropBox));\n          this.props.history.push(\"/\");\n        })\n        .catch(err => {\n          AuthStore.setLoading(false);\n        });\n    }\n\n    // если есть Access_token то входим\n    const accessToken = localStorage.getItem(\"access_token\");\n    if (accessToken && cloudSource === \"OneDrive\") {\n      FilesStore.setClient(\n        new OneDriveClient(\n          MicrosoftGraph.Client.init({\n            authProvider: (done: AuthProviderCallback) => {\n              done(null, accessToken);\n            }\n          })\n        )\n      );\n      AuthStore.setIsAuthed();\n\n      this.props.history.push(\"/\");\n    }\n\n    //* Получаем Access_token для OneDrive по id_token\n    const userAgentApplication = new Msal.UserAgentApplication(\n      \"b07f11e5-8934-40a1-a327-1859322ed1c6\",\n      null,\n      () => {}\n    );\n\n    const idToken = localStorage.getItem(\"id_token\");\n    if (idToken && !(accessToken && cloudSource === \"OneDrive\")) {\n      userAgentApplication\n        .acquireTokenSilent([\"files.read.all\"])\n        .then(async accessToken => {\n          localStorage.setItem(\"access_token\", accessToken);\n          FilesStore.setClient(\n            new OneDriveClient(\n              MicrosoftGraph.Client.init({\n                authProvider: (done: AuthProviderCallback) => {\n                  done(null, accessToken);\n                }\n              })\n            )\n          );\n          AuthStore.setIsAuthed();\n\n          this.props.history.push(\"/\");\n        })\n        .catch(err => {\n          console.error(\"Ошибка получения access_token Onedrive\", err);\n        });\n    }\n\n    // Когда страничка OAUTH2 Dropbox или Onedrive редиректнула нас назад при авторизации\n    if (this.props.location.hash) {\n      const urlParams = queryString.parse(this.props.location.hash) as any;\n      switch (localStorage.getItem(\"cloudSource\")) {\n        case \"Dropbox\":\n          this.authorizedByDropbox(urlParams);\n        case \"OneDrive\":\n          this.authorizedByOneDrive(urlParams);\n      }\n    }\n  }\n\n  authorizedByDropbox = async (urlParams: any) => {\n    const FilesStore: FilesStore = (this.props.store as any).FilesStore;\n    localStorage.setItem(\"access_token\", urlParams.access_token);\n    FilesStore.setClient(\n      new DropboxClient(\n        new Dropbox({\n          accessToken: urlParams.access_token\n        })\n      )\n    );\n  };\n\n  authorizedByOneDrive = async (urlParams: any) => {\n    const FilesStore: FilesStore = (this.props.store as any).FilesStore;\n    const AuthStore: AuthStore = (this.props.store as any).AuthStore;\n    const accessToken =\n      localStorage.getItem(\"access_token\") || urlParams.access_token;\n    if (accessToken) {\n      localStorage.setItem(\"access_token\", accessToken);\n    }\n    if (urlParams.id_token) {\n      localStorage.setItem(\"id_token\", urlParams.id_token);\n    }\n  };\n\n  handleOnedriveAuth = () => {\n    localStorage.setItem(\"cloudSource\", \"OneDrive\");\n    const userAgentApplication = new Msal.UserAgentApplication(\n      \"b07f11e5-8934-40a1-a327-1859322ed1c6\",\n      null,\n      () => {}\n    );\n    userAgentApplication.loginRedirect([\"files.read.all\"]);\n  };\n\n  public render() {\n    const { AuthStore } = this.props.store!;\n    return (\n      <div className=\"auth-container\">\n        <Card\n          className=\"auth-container__authbox\"\n          title=\"Вход\"\n          loading={AuthStore.loading}\n        >\n          <p>\n            Здравствуйте! Для получения доступа к Вашему облаку нам необходима\n            авторизация. Нажмите пожалуйста на кнопку ниже.{\" \"}\n          </p>\n          <p>\n            Мы рекомендуем ипользовать <b>OneDrive</b> т.к он предоставляет\n            метаинформацию по файлам (альбом, композитор, обложка и т.д)\n          </p>\n          <Button\n            className=\"auth-container__button\"\n            onClick={() => {\n              localStorage.setItem(\"cloudSource\", \"Dropbox\");\n            }}\n            type=\"primary\"\n            href={this.state.OAuthUrl}\n          >\n            <Icon type=\"dropbox\" />\n            Войти через Dropbox\n          </Button>\n          <Button\n            className=\"auth-container__button\"\n            type=\"primary\"\n            onClick={this.handleOnedriveAuth}\n          >\n            <Icon type=\"windows\" />\n            Войти через OneDrive\n          </Button>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default inject(\"store\")(withRouter(Authentication));\n","export const secsToMins = secs => {\n  const fullSecs = Math.trunc(secs);\n  const deciSecs = fullSecs % 60;\n  const toOut = `${Math.floor(fullSecs / 60)}:${\n    deciSecs < 10 ? \"0\" + deciSecs : deciSecs\n  }`;\n  return toOut;\n};\n","import React, { ReactNode, Fragment } from \"react\";\nimport { Icon, Slider, Button, Popover, Radio } from \"antd\";\nimport \"./Player.scss\";\nimport { observer, inject } from \"mobx-react\";\nimport ReactPlayer, { ReactPlayerProps } from \"react-player\";\nimport { Store } from \"../../store/Store\";\nimport { secsToMins } from \"../../helpers/secsToMins\";\nimport { SliderValue } from \"antd/lib/slider\";\nimport { isMobile } from \"react-device-detect\";\nimport RadioGroup from \"antd/lib/radio/group\";\n\ninterface IPlayerContainer {\n  store?: Store;\n}\n\ninterface IDurationProgress {\n  played: number;\n  playedSeconds: number;\n  loaded: number;\n  loadedSeconds: number;\n}\n\n@inject(\"store\")\n@observer\nclass PlayerContainer extends React.Component<IPlayerContainer> {\n  state = {\n    progress: {\n      played: 0,\n      playedSeconds: 0,\n      loaded: 0,\n      loadedSeconds: 0\n    },\n    repeat: {\n      value: \"\",\n      title: \"\"\n    },\n    shuffle: {\n      value: \"\",\n      title: \"\"\n    },\n    volume: 50,\n    playback: 0\n  };\n  private player!: ReactPlayer;\n\n  handleChangeVolume = (volume: SliderValue) => {\n    this.setState({ volume: Number(volume) });\n  };\n\n  handleChangeMode = (mode: \"shuffle\" | \"repeat\") => {\n    const { store } = this.props;\n    if (isMobile && this.state[mode].value === \"song\" && mode == \"shuffle\") {\n      mode = \"repeat\";\n      this.setState({\n        repeat: { title: \"альбом\", value: \"album\" }\n      });\n      store!.FilesStore.client.mode = mode;\n      store!.FilesStore.client.checkspace = \"album\";\n      return;\n    }\n    let repeat = { title: \"\", value: \"\" };\n    let shuffle = { title: \"\", value: \"\" };\n    store!.FilesStore.client.mode = mode;\n    switch ((this.state as any)[mode].value) {\n      case \"\": {\n        this.setState({\n          repeat,\n          shuffle,\n          [mode]: { title: \"альбом\", value: \"album\" }\n        });\n        store!.FilesStore.client.checkspace = \"album\";\n        break;\n      }\n      case \"album\": {\n        this.setState({\n          repeat,\n          shuffle,\n          [mode]: { title: \"песня\", value: \"song\" }\n        });\n        store!.FilesStore.client.checkspace = \"song\";\n        break;\n      }\n      case \"song\": {\n        this.setState({ repeat, shuffle, [mode]: { value: \"\", title: \"\" } });\n        store!.FilesStore.client.checkspace = \"\";\n        store!.FilesStore.client.mode = \"\";\n        break;\n      }\n      default: {\n        this.setState({ repeat, shuffle, [mode]: { value: \"\", title: \"\" } });\n        break;\n      }\n    }\n  };\n\n  public render() {\n    const { FilesStore } = this.props.store!;\n    return (\n      <div className=\"player\" style={{ marginBottom: \"12px\" }}>\n        <ReactPlayer\n          ref={el => (this.player = el!)}\n          style={{\n            position: \"absolute\",\n            zIndex: -5\n          }}\n          onDuration={(dur: any) => {\n            FilesStore.playNow.audio.duration = dur;\n          }}\n          onProgress={(progress: IDurationProgress) => {\n            this.setState({ progress });\n          }}\n          width=\"1px\"\n          height=\"1px\"\n          loop={this.state.repeat.value === \"song\"}\n          fileConfig={{ forceAudio: true }}\n          url={FilesStore.playNow.URL}\n          playing={FilesStore.isPlay}\n          volume={this.state.volume / 100}\n          onEnded={FilesStore.getNext}\n        />\n\n        <Icon\n          type={!FilesStore.isPlay ? \"play-circle\" : \"pause-circle\"}\n          theme=\"filled\"\n          className=\"player-btn__play\"\n          onClick={() => {\n            FilesStore.switchPlay();\n          }}\n        />\n\n        <Icon\n          type=\"step-backward\"\n          theme=\"filled\"\n          className=\"player-btn__step\"\n          onClick={FilesStore.getPrev}\n        />\n        <Icon\n          type=\"step-forward\"\n          theme=\"filled\"\n          className=\"player-btn__step\"\n          onClick={FilesStore.getNext}\n        />\n        <div className=\"slider-block\">\n          <div className=\"slider-block__meta\">\n            <div className=\"slider-block__naming\">\n              <p className=\"slider-block__title\">\n                {FilesStore.playNow.audio.title}\n              </p>\n              {FilesStore.playNow.audio.author && (\n                <p className=\"slider-block__author\">\n                  {FilesStore.playNow.audio.author}\n                </p>\n              )}\n            </div>\n            <p className=\"slider-block__time\">\n              <span>\n                {secsToMins(this.state.progress.playedSeconds)}\n                {!isMobile &&\n                  \" / \" + secsToMins(FilesStore.playNow.audio.duration)}\n              </span>\n            </p>\n          </div>\n          <Slider\n            className=\"slider-block__slider\"\n            max={FilesStore.playNow.audio.duration}\n            tipFormatter={(val: number) => secsToMins(val)}\n            onChange={(el: SliderValue) => {\n              this.player.seekTo(Number(el));\n            }}\n            value={this.state.progress.playedSeconds}\n          />\n        </div>\n        {!isMobile && (\n          <Slider\n            className=\"player__volume\"\n            max={100}\n            value={this.state.volume}\n            onChange={this.handleChangeVolume}\n          />\n        )}\n        <div className=\"player__additional\">\n          <div className=\"shuffle-group\">\n            {isMobile ? (\n              !this.state.repeat.value ? (\n                <Fragment>\n                  <Icon\n                    className={`player-btn__shuffle ${this.state.shuffle\n                      .value && \"active\"}`}\n                    type=\"swap\"\n                    onClick={() => {\n                      this.handleChangeMode(\"shuffle\");\n                    }}\n                  />\n                  <p className=\"repeat-group__label\">\n                    {this.state.shuffle.title}\n                  </p>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <Icon\n                    className={`player-btn__repeat ${this.state.repeat.value &&\n                      \"active\"}`}\n                    type=\"reload\"\n                    onClick={() => {\n                      this.handleChangeMode(\"repeat\");\n                    }}\n                  />\n                  <p className=\"repeat-group__label\">\n                    {this.state.repeat.title}\n                  </p>\n                </Fragment>\n              )\n            ) : (\n              <Fragment>\n                <Icon\n                  className={`player-btn__shuffle ${this.state.shuffle.value &&\n                    \"active\"}`}\n                  type=\"swap\"\n                  onClick={() => {\n                    this.handleChangeMode(\"shuffle\");\n                  }}\n                />\n                <p className=\"repeat-group__label\">\n                  {this.state.shuffle.title}\n                </p>\n              </Fragment>\n            )}\n          </div>\n          {!isMobile && (\n            <div className=\"repeat-group\">\n              <Icon\n                className={`player-btn__repeat ${this.state.repeat.value &&\n                  \"active\"}`}\n                type=\"reload\"\n                onClick={() => {\n                  this.handleChangeMode(\"repeat\");\n                }}\n              />\n              <p className=\"repeat-group__label\">{this.state.repeat.title}</p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PlayerContainer;\n","import React from \"react\";\nimport \"./TopBar.scss\";\nimport { inject, observer } from \"mobx-react\";\nimport { Icon, Tooltip, Switch } from \"antd\";\nimport { Store } from \"../../store/Store\";\n\ninterface ITopBar {\n  store?: Store;\n}\n@inject(\"store\")\n@observer\nclass TopBar extends React.Component<ITopBar> {\n  async componentDidMount() {\n    const { FilesStore, AuthStore } = this.props.store!;\n    AuthStore.setUser(await FilesStore.client.getMe());\n  }\n\n  handleLogOut = () => {\n    localStorage.removeItem(\"cloudSource\");\n    localStorage.removeItem(\"id_token\");\n    localStorage.removeItem(\"access_token\");\n    window.location.href = \"/\";\n  };\n\n  handleChangeDest = (checked: boolean) => {\n    if (checked) this.props.store!.FilesStore.fetchFilesAlbum();\n    else {\n      this.props.store!.FilesStore.fetchFiles();\n    }\n  };\n\n  public render() {\n    const AuthStore = this.props.store!.AuthStore;\n    return (\n      <div className=\"top-bar\">\n        <div className=\"top-bar__switch-dest\">\n          <Switch\n            onChange={this.handleChangeDest}\n            unCheckedChildren={<Icon type=\"folder\" />}\n            checkedChildren={<div className=\"top-bar__switch-dest_icon\" />}\n          />\n        </div>\n        <div className=\"top-bar__user-icon\">\n          <p>{AuthStore.user!.userName}</p>\n          <Tooltip title=\"Выход\">\n            <Icon type=\"logout\" onClick={this.handleLogOut} />\n          </Tooltip>\n        </div>\n      </div>\n    );\n  }\n}\nexport default TopBar;\n","import React, { Fragment } from \"react\";\n// import fetch from \"isomorphic-fetch\";\nimport { Dropbox } from \"dropbox\";\nimport {\n  BrowserRouter as Router,\n  withRouter,\n  RouteComponentProps,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport PlaylistContainer from \"./playlist/PlaylistContainer\";\nimport Authentication from \"./auth/ Authentication\";\nimport { inject, observer } from \"mobx-react\";\nimport { Store } from \"../store/Store\";\nimport { Spin } from \"antd\";\nimport PlayerContainer from \"./player/PlayerContainer\";\nimport { isMobile } from \"react-device-detect\";\nimport TopBar from \"./topBar/TopBar\";\n\ninterface IContainer extends RouteComponentProps {\n  store?: Store;\n}\n\n@inject(\"store\")\n@observer\nclass Container extends React.Component<IContainer> {\n  async componentDidMount() {\n    const { props } = this;\n    const { AuthStore, FilesStore } = this.props.store!;\n    if (!props.location.hash) {\n      if (!AuthStore.OAuthPassed) {\n        props.history.push(\"/auth\");\n      } else {\n        props.history.push(\"/\");\n      }\n    }\n  }\n\n  fetchFiles = () => {\n    const { FilesStore } = this.props.store!;\n    FilesStore.fetchFiles();\n  };\n\n  playFile = (path: string) => {\n    const { FilesStore } = this.props.store!;\n    FilesStore.playFile(path);\n  };\n\n  public render() {\n    const { FilesStore, AuthStore } = this.props.store!;\n    return (\n      <div className={\"main-container\"}>\n        <Switch>\n          <Route path=\"/auth\">\n            <Authentication />\n          </Route>\n\n          <Route path=\"/\">\n            {AuthStore.OAuthPassed ? (\n              <Fragment>\n                <TopBar />\n                <PlayerContainer />\n\n                <div style={{ marginTop: \"12px\" }}>\n                  <PlaylistContainer\n                    files={FilesStore.files}\n                    fetchFiles={this.fetchFiles}\n                    playFile={this.playFile}\n                    // playNow={FilesStore.playNow}\n                  />\n                </div>\n              </Fragment>\n            ) : (\n              <Spin />\n            )}\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Container);\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport \"antd/dist/antd.css\";\nimport \"./style.scss\";\nimport Container from \"./components/Container\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Container />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { observable, action } from \"mobx\";\nimport { User } from \"../types/playlist/User\";\n\nexport class AuthStore {\n  @observable OAuthUrl: string = \"\";\n  @observable OAuthToken: string = \"\";\n  @observable OAuthPassed: boolean = false;\n  @observable loading = false;\n  @observable user?: User = new User(\"\");\n\n  @action.bound setIsAuthed = () => {\n    this.OAuthPassed = true;\n  };\n\n  @action.bound setNotAuthed = () => {\n    this.OAuthPassed = false;\n  };\n\n  @action.bound setLoading = (loading: boolean) => {\n    this.loading = loading;\n  };\n\n  @action.bound setUser = (user: User) => {\n    this.user = user;\n  };\n}\n\nexport default new AuthStore();\n","import { observable, action } from \"mobx\";\nimport { ICloudClient } from \"../types/clients/ICloudClient\";\n\nclass CommonStore {}\n\nexport default new CommonStore();\n","import { observable, action } from \"mobx\";\nimport { FileSet } from \"../types/playlist/FileSet\";\nimport { ICloudClient } from \"../types/clients/ICloudClient\";\nimport { async } from \"q\";\nimport { AudioPlaying } from \"../types/AudioPlaying\";\nimport { Audio } from \"../types/playlist/Audio\";\nimport {\n  checkIfStateModificationsAreAllowed,\n  computed\n} from \"mobx/lib/internal\";\n\nexport class FilesStore {\n  playingAlbum?: FileSet;\n\n  @observable files!: FileSet;\n  @observable sourceCloud: \"OneDrive\" | \"Dropbox\" | string = \"\";\n  @observable client!: ICloudClient;\n  @observable playNow: AudioPlaying = new AudioPlaying(\n    new Audio(\"\", \"\", \"\", 0, \"\"),\n    \"\",\n    \"\"\n  );\n  @observable isPlay: boolean = false;\n\n  @action.bound setCloud = (sourceCloud: \"OneDrive\" | \"Dropbox\" | \"\") => {\n    this.sourceCloud = sourceCloud;\n  };\n  @action.bound setClient = (client: ICloudClient) => {\n    this.client = client;\n  };\n  @action.bound fetchFiles = async () => {\n    this.files = await this.client.getAllFiles();\n  };\n\n  @action.bound fetchFilesAlbum = async () => {\n    if (this.files) {\n      this.files = await this.client.getAllFilesAlbums();\n    } else {\n      await this.client.getAllFiles();\n      this.files = await this.client.getAllFilesAlbums();\n    }\n  };\n\n  @action.bound playFile = async (path: string) => {\n    this.playingAlbum = this.getPlayingAlbum(path, this.client.filesetFiles!);\n    this.client.playFile(path).then(result => {\n      this.playNow = result;\n      this.isPlay = true;\n    });\n  };\n  @action.bound setNowDuration = (dur: number) => {\n    this.playNow.audio.duration = dur;\n  };\n  @action.bound play = () => {\n    this.isPlay = true;\n  };\n  @action.bound pause = () => {\n    this.isPlay = false;\n  };\n  @action.bound switchPlay = () => {\n    this.isPlay = !this.isPlay;\n  };\n  @action.bound getNext = async () => {\n    const path = this.playNow.fullPath;\n    const currentIndex = this.client.mapOfFiles.findIndex(\n      el => (el.content as Audio).fullPath === path\n    );\n    switch (this.client.mode) {\n      case \"repeat\": {\n        if (this.client.checkspace === \"album\") {\n          const album = this.playingAlbum!;\n          let indexInAlbum = album.files.findIndex(\n            el => (el.content as Audio).fullPath === path\n          );\n          indexInAlbum =\n            indexInAlbum >= album.files.length - 1 ? 0 : indexInAlbum + 1;\n          this.playNow = await this.client.playFile(\n            (album.files[indexInAlbum].content as Audio).fullPath\n          );\n        } else {\n          this.playNow = await this.client.playFile(\n            (this.client.mapOfFiles[currentIndex].content as Audio).fullPath\n          );\n        }\n        break;\n      }\n      case \"shuffle\": {\n        if (this.client.checkspace === \"album\") {\n          const album = this.playingAlbum!;\n          let indexInAlbum = album.files.findIndex(\n            el => (el.content as Audio).fullPath === path\n          );\n          indexInAlbum = Math.floor(Math.random() * album.files.length);\n          this.playNow = await this.client.playFile(\n            (album.files[indexInAlbum].content as Audio).fullPath\n          );\n        } else {\n          const audio = this.client.mapOfFiles[\n            Math.floor(Math.random() * this.client.mapOfFiles.length)\n          ];\n          this.playNow = await this.client.playFile(\n            (audio.content as Audio).fullPath\n          );\n          this.playingAlbum = this.getPlayingAlbum(\n            path,\n            this.client.filesetFiles!\n          );\n        }\n        break;\n      }\n      default: {\n        const nextIndex =\n          currentIndex === this.client.mapOfFiles.length - 1\n            ? 0\n            : currentIndex + 1;\n        this.playNow = await this.client.playFile(\n          (this.client.mapOfFiles[nextIndex].content as Audio).fullPath\n        );\n      }\n    }\n  };\n\n  @action.bound getPrev = async () => {\n    this.isPlay = true;\n\n    let nextIndex = this.client.mapOfFiles.findIndex(\n      el => (el.content as Audio).fullPath === this.playNow.fullPath\n    );\n    nextIndex = nextIndex === 0 ? 0 : nextIndex - 1;\n    return this.playFile(\n      (this.client.mapOfFiles[nextIndex].content as Audio).fullPath\n    );\n  };\n\n  @action.bound setMode = (\n    mode: \"shuffle\" | \"repeat\" | \"\",\n    checkspace: \"album\" | \"song\" | \"\"\n  ) => {\n    this.client.checkspace = checkspace;\n    this.client.mode = mode;\n  };\n\n  getPlayingAlbum = (path: string, fileSet: FileSet): FileSet => {\n    for (let i = 0; i < fileSet.files.length; i++) {\n      if (fileSet.files[i].type === \"File\") {\n        const audio = fileSet.files[i].content as Audio;\n        if (audio.fullPath === path) {\n          const newFileSet = new FileSet();\n          newFileSet.files = fileSet.files.filter(el => el.type !== \"Folder\");\n          return newFileSet;\n        }\n      } else {\n        const newFileSet = this.getPlayingAlbum(path, fileSet.files[i]\n          .content as FileSet);\n        if (newFileSet.files.length > 0) return newFileSet;\n      }\n    }\n    return new FileSet();\n  };\n}\n\nexport default new FilesStore();\n","import AuthStore from \"./AuthStore\";\nimport CommonStore from \"./CommonStore\";\nimport FilesStore from \"./FilesStore\";\n\nexport class Store {\n  public AuthStore = AuthStore;\n  public CommonStore = CommonStore;\n  public FilesStore = FilesStore;\n}\n\nexport default new Store();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Store from \"./store/Store\";\nimport { Provider } from \"mobx-react\";\n\n(window as any).store = Store;\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}